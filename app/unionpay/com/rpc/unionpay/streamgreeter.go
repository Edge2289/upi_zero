// Code generated by goctl. DO NOT EDIT!
// Source: customer.proto

package unionpay

import (
	"context"

	"upi/app/unionpay/com/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	StreamReq  = pb.StreamReq
	StreamResp = pb.StreamResp

	StreamGreeter interface {
		Greet(ctx context.Context, in *StreamReq, opts ...grpc.CallOption) (*StreamResp, error)
	}

	defaultStreamGreeter struct {
		cli zrpc.Client
	}
)

func NewStreamGreeter(cli zrpc.Client) StreamGreeter {
	return &defaultStreamGreeter{
		cli: cli,
	}
}

func (m *defaultStreamGreeter) Greet(ctx context.Context, in *StreamReq, opts ...grpc.CallOption) (*StreamResp, error) {
	client := pb.NewStreamGreeterClient(m.cli.Conn())
	return client.Greet(ctx, in, opts...)
}
