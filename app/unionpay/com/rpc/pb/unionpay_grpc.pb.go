// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.15.8
// source: unionpay.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UnionpayClient is the client API for Unionpay service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UnionpayClient interface {
	SavePayOrder(ctx context.Context, in *SavePayOrderReq, opts ...grpc.CallOption) (*SavePayOrderResp, error)
}

type unionpayClient struct {
	cc grpc.ClientConnInterface
}

func NewUnionpayClient(cc grpc.ClientConnInterface) UnionpayClient {
	return &unionpayClient{cc}
}

func (c *unionpayClient) SavePayOrder(ctx context.Context, in *SavePayOrderReq, opts ...grpc.CallOption) (*SavePayOrderResp, error) {
	out := new(SavePayOrderResp)
	err := c.cc.Invoke(ctx, "/pb.unionpay/savePayOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UnionpayServer is the server API for Unionpay service.
// All implementations must embed UnimplementedUnionpayServer
// for forward compatibility
type UnionpayServer interface {
	SavePayOrder(context.Context, *SavePayOrderReq) (*SavePayOrderResp, error)
	mustEmbedUnimplementedUnionpayServer()
}

// UnimplementedUnionpayServer must be embedded to have forward compatible implementations.
type UnimplementedUnionpayServer struct {
}

func (UnimplementedUnionpayServer) SavePayOrder(context.Context, *SavePayOrderReq) (*SavePayOrderResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavePayOrder not implemented")
}
func (UnimplementedUnionpayServer) mustEmbedUnimplementedUnionpayServer() {}

// UnsafeUnionpayServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UnionpayServer will
// result in compilation errors.
type UnsafeUnionpayServer interface {
	mustEmbedUnimplementedUnionpayServer()
}

func RegisterUnionpayServer(s grpc.ServiceRegistrar, srv UnionpayServer) {
	s.RegisterService(&Unionpay_ServiceDesc, srv)
}

func _Unionpay_SavePayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePayOrderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnionpayServer).SavePayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.unionpay/savePayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnionpayServer).SavePayOrder(ctx, req.(*SavePayOrderReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Unionpay_ServiceDesc is the grpc.ServiceDesc for Unionpay service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Unionpay_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.unionpay",
	HandlerType: (*UnionpayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "savePayOrder",
			Handler:    _Unionpay_SavePayOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "unionpay.proto",
}
